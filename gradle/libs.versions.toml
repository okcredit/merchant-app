[versions]
agp = "8.4.1"
kotlin = "2.0.0"
compose-multiplatform="1.6.10"
kotlin-coroutines = "1.8.1"
kotlinx-serialization = "1.7.0-RC"
kotlinx-dateTime = "0.5.0"
ksp = "2.0.0-1.0.21"
ktlint = "1.0.1"
okio = "3.9.0"
spotless = "6.25.0"
kover = "0.7.6"
mokkery = "2.0.0-RC1"

ktor = "2.3.11"
ktorfit = "2.0.0-beta1"
sqldelight = "2.0.2"
activity-compose = "1.9.0"
kermit = "2.0.3"
multiplatform-settings = "1.1.1"
kotlin-inject = "0.6.3"
mixpanel = "7.3.1"
firebase-bom = "32.1.1"
firebase-messaging = "24.0.0"
voyager = "1.0.0-rc06"
turbine = "1.1.0"

workmanager = "2.9.0"
moko-resources = "0.23.0"

[plugins]
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
gms-googleServices = "com.google.gms.google-services:4.4.1"
firebase-crashlytics = "com.google.firebase.crashlytics:3.0.1"
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
[libraries]
kotlinx-serializationCore = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-coroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlinx-coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-dateTime" }
kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.24.0"
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version = "0.28.1" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-coroutineExtensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-androidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-nativeDriver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqliteDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-primitiveAdapter = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

firebase-bom = "com.google.firebase:firebase-bom:33.0.0"
firebase-analytics = "com.google.firebase:firebase-analytics-ktx:22.0.0"
firebase-crashlytics = "com.google.firebase:firebase-crashlytics-ktx:19.0.0"
firebase-messaging = { module = "com.google.firebase:firebase-messaging-ktx", version.ref = "firebase-messaging" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }

log-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }


ktorfit = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfit-converter = { module = "de.jensklingenberg.ktorfit:ktorfit-converters-response", version.ref = "ktorfit" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-clientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-clientAuth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlin-inject" }
kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-tabNavigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-bottomsheet = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }

androidx-workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }

mixpanel-android = { module = "com.mixpanel.android:mixpanel-android", version.ref = "mixpanel" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }

tools-desugarjdklibs = "com.android.tools:desugar_jdk_libs:2.0.4"

# Build logic dependencies
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
spotless-gradlePlugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
compose-gradlePlugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
composeCompiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

[bundles]
multiplatform-settings = ["multiplatform-settings", "multiplatform-settings-coroutines"]
sqldelight-common = ["sqldelight-runtime", "sqldelight-coroutineExtensions", "sqldelight-primitiveAdapter"]
moko-resources = ["moko-resources", "moko-resources-compose"]
